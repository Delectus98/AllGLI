{"remainingRequest":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/babel-loader/lib/index.js!/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/src/components/todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/src/components/todos.vue","mtime":1602146944064},{"path":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/github/AllGLI/tpweb3/myapp2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvbWJldWNoZXIvd2ViLXdvcmtzcGFjZS9naXRodWIvQWxsR0xJL3Rwd2ViMy9teWFwcDIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiL2hvbWUvbWJldWNoZXIvd2ViLXdvcmtzcGFjZS9naXRodWIvQWxsR0xJL3Rwd2ViMy9teWFwcDIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL2hvbWUvbWJldWNoZXIvd2ViLXdvcmtzcGFjZS9naXRodWIvQWxsR0xJL3Rwd2ViMy9teWFwcDIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9tYmV1Y2hlci93ZWItd29ya3NwYWNlL2dpdGh1Yi9BbGxHTEkvdHB3ZWIzL215YXBwMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9ob21lL21iZXVjaGVyL3dlYi13b3Jrc3BhY2UvZ2l0aHViL0FsbEdMSS90cHdlYjMvbXlhcHAyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvbWJldWNoZXIvd2ViLXdvcmtzcGFjZS9naXRodWIvQWxsR0xJL3Rwd2ViMy9teWFwcDIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfY2xhc3MsIF90ZW1wOwoKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsgLy8gc3RhdGVzCgp2YXIgVE9ETyA9ICJUb2RvIjsKLypjb25zdCBJTl9QUk9HUkVTUyA9ICJJblByb2dyZXNzIjsKY29uc3QgRE9ORSA9ICJEb25lIjsqLwoKdmFyIFRhc2sgPSBmdW5jdGlvbiBUYXNrKG1lc3NhZ2UsIF90eXBlKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRhc2spOwoKICBfZGVmaW5lUHJvcGVydHkodGhpcywgIm5hbWUiLCAiIik7CgogIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAidHlwZSIsIFRPRE8pOwoKICB0aGlzLm5hbWUgPSBtZXNzYWdlOwogIHRoaXMudHlwZSA9IF90eXBlOwp9OwoKdmFyIFRvZG9zID0gQ29tcG9uZW50KF9jbGFzcyA9IChfdGVtcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhUb2RvcywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoVG9kb3MpOwoKICBmdW5jdGlvbiBUb2RvcygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVG9kb3MpOwoKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgfQoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwuYXBwbHkoX3N1cGVyLCBbdGhpc10uY29uY2F0KGFyZ3MpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJuYW1lIiwgJ3RvZG9zJyk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAicHJvcHMiLCBbXSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAibWVzc2FnZSIsICcnKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJmaWx0ZXIiLCAnJyk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAic3RhdGVkIiwgdHJ1ZSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAidGFza3MiLCBbXSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAicGlja2VkIiwgVE9ETyk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAibmV3TmFtZSIsICIiKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzZWxlY3RlZEFsbCIsIGZhbHNlKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJjaGVja2VkSWRzIiwgW10pOwoKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhUb2RvcywgW3sKICAgIGtleTogImFkZFRhc2siLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFRhc2soKSB7CiAgICAgIGNvbnNvbGUubG9nKCJhZGRlZDoiICsgdGhpcy5tZXNzYWdlKTsKICAgICAgdGhpcy50YXNrcy5wdXNoKG5ldyBUYXNrKHRoaXMubWVzc2FnZSwgdGhpcy5waWNrZWQpKTsKICAgICAgdGhpcy5tZXNzYWdlID0gJyc7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZEFsbCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRBbGwgPSBmYWxzZTsKICAgICAgICB0aGlzLmNoZWNrQWxsKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5hbWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmFtZShpbmRleCkgewogICAgICB0aGlzLnRhc2tzW2luZGV4XS5uYW1lID0gdGhpcy5uZXdOYW1lOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuY2hlY2tlZElkcy5mb3JFYWNoKGZ1bmN0aW9uICh2LCBpKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi50YXNrc1t2XS50eXBlID0gX3RoaXMyLnBpY2tlZDsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVtb3ZlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoaW5kZXgpIHsKICAgICAgY29uc29sZS5sb2coImRlbGV0aW5nICIgKyB0aGlzLnRhc2tzW2luZGV4XS5uYW1lICsgIiB0YXNrISIpOwogICAgICB0aGlzLmNoZWNrZWRJZHMgPSBbXTsKICAgICAgdGhpcy5zZWxlY3RlZEFsbCA9IGZhbHNlOwogICAgICB0aGlzLnRhc2tzLnNwbGljZShpbmRleCwgMSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYXJjaGl2ZURvbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFyY2hpdmVEb25lKCkgewogICAgICB0aGlzLmNoZWNrZWRJZHMgPSBbXTsKICAgICAgdGhpcy5zZWxlY3RlZEFsbCA9IGZhbHNlOwogICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5maWx0ZXIoZnVuY3Rpb24gKHQpIHsKICAgICAgICByZXR1cm4gdC50eXBlICE9PSAiRG9uZSI7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNoZWNrQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja0FsbCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnNlbGVjdGVkQWxsID0gIXRoaXMuc2VsZWN0ZWRBbGw7CiAgICAgIHRoaXMuY2hlY2tlZElkcyA9IFtdOwoKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRBbGwpIHsKICAgICAgICAvLyBDaGVjayBhbGwKICAgICAgICB0aGlzLnRhc2tzLmZvckVhY2goZnVuY3Rpb24gKHQsIGkpIHsKICAgICAgICAgIHJldHVybiBfdGhpczMuY2hlY2tlZElkcy5wdXNoKGkpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlQ2hlY2tBbGwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZUNoZWNrQWxsKCkgewogICAgICBpZiAodGhpcy5jaGVja2VkSWRzLmxlbmd0aCA9PT0gdGhpcy50YXNrcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkQWxsID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlbGVjdGVkQWxsID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBUb2RvczsKfShWdWUpLCBfdGVtcCkpIHx8IF9jbGFzczsKCmV4cG9ydCB7IFRvZG9zIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAwCA,SAAA,SAAA,EAAA,GAAA,QAAA,wBAAA,C,CAEA;;AACA,IAAA,IAAA,GAAA,MAAA;AACA;;;IAGA,I,GAKA,cAAA,OAAA,EAAA,KAAA,EAAA;AAAA;;AAAA,gCAHA,EAGA;;AAAA,gCAFA,IAEA;;AACA,OAAA,IAAA,GAAA,OAAA;AACA,OAAA,IAAA,GAAA,KAAA;AACA,C;;IAIA,K,GADA,S;;;;;;;;;;;;;;;;2DAGA,O;;4DACA,E;;8DAEA,E;;6DACA,E;;6DAEA,I;;4DACA,E;;6DAEA,I;;8DAEA,E;;kEAEA,K;;iEACA,E;;;;;;;8BAEA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA,KAAA,OAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA,KAAA,OAAA,EAAA,KAAA,MAAA,CAAA;AACA,WAAA,OAAA,GAAA,EAAA;;AACA,UAAA,KAAA,WAAA,EACA;AACA,aAAA,WAAA,GAAA,KAAA;AACA,aAAA,QAAA;AACA;AACA;;;2BAEA,K,EACA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,IAAA,GAAA,KAAA,OAAA;AACA;;;6BAEA;AAAA;;AACA,WAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,GAAA,MAAA,CAAA,MAAA;AAAA,OAAA;AACA;;;2BAEA,K,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA,KAAA,KAAA,CAAA,KAAA,EAAA,IAAA,GAAA,QAAA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;;;kCAEA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA;;;+BAEA;AAAA;;AACA,WAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,WAAA,UAAA,GAAA,EAAA;;AACA,UAAA,KAAA,WAAA,EAAA;AAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,iBAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AACA;AACA;;;qCACA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,KAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,aAAA,WAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA,GAAA,KAAA;AACA;AACA;;;;EAhEA,G;;SAAA,K","sourcesContent":["<template lang=\"html\">\n  <div class=\"todos\">\n    <h1>{{ name }}</h1>\n    <input type=\"radio\" id=\"select-done\" value=\"Done\" v-model=\"picked\">\n    <label for=\"select-done\">Done</label>\n    <input type=\"radio\" id=\"select-in-progress\" value=\"InProgress\" v-model=\"picked\">\n    <label for=\"select-in-progress\">In progress</label>\n    <input type=\"radio\" id=\"select-todo\"  value=\"Todo\" v-model=\"picked\">\n    <label for=\"select-todo\">Todo</label>\n\n    <button v-on:click=\"update()\">\n      Apply state to selected tasks\n    </button>\n    <button v-on:click=\"archiveDone()\">Archive all done tasks</button>\n    <input type=\"checkbox\" id=\"filter-tasks\" v-model=\"stated\">\n    <label for=\"filter-tasks\">Filter by state</label>\n\n    <input type=\"text\" v-model=\"filter\" placeholder=\"Recherchez en détail!\"><br/>\n    <input type=\"text\" v-model=\"message\" placeholder=\"Rentrez champ tâche ici!\" v-on:change=\"addTask()\">\n\n    <input type='checkbox' id=\"select-all\" @click='checkAll()' v-model=\"selectedAll\">\n    <label for=\"select-all\">Select all</label>\n    <ul>\n      <li v-for=\"(item, index) in tasks.filter(t0 => t0.name.startsWith(filter) && (!stated || t0.type.startsWith(picked)))\" :key=\"index\" >\n        <input type=\"checkbox\" v-model=\"checkedIds\" :value=\"tasks.indexOf(item)\" @change='updateCheckAll()'>\n        {{ item.name }} [{{item.type}}]\n        {{ tasks.indexOf(item) }}\n        <button v-on:click=\"remove(index)\">\n          X\n        </button>\n        <input type=\"text\" v-if=\"checkedIds.length === 1 && checkedIds.includes(index)\" v-model=\"newName\" placeholder=\"rename\" @change=\"rename(index)\">\n      </li>\n    </ul>\n    <footer v-if=\"tasks.length!==0\">\n      Task count: {{ tasks.length }}\n    </footer>\n  </div>\n</template>\n\n<script lang=\"js\">\nimport { Component, Vue } from 'vue-property-decorator';\n\n// states\nconst TODO = \"Todo\";\n/*const IN_PROGRESS = \"InProgress\";\nconst DONE = \"Done\";*/\n\nclass Task\n{\n  name=\"\";\n  type=TODO;\n\n  constructor(message, _type) {\n    this.name = message;\n    this.type = _type;\n  }\n}\n\n@Component\nexport default class Todos extends Vue {\n\n  name = 'todos';\n  props = [];\n\n  message = '';\n  filter = '';\n\n  stated = true;\n  tasks = [];\n  // TODO\n  picked = TODO;\n\n  newName=\"\";\n\n  selectedAll = false;\n  checkedIds = [];\n\n  addTask() {\n    console.log(\"added:\" + this.message);\n    this.tasks.push(new Task(this.message, this.picked))\n    this.message = '';\n    if (this.selectedAll)\n    {\n      this.selectedAll = false;\n      this.checkAll();\n    }\n  }\n\n  rename(index)\n  {\n    this.tasks[index].name = this.newName;\n  }\n\n  update() {\n    this.checkedIds.forEach((v,i) => this.tasks[v].type = this.picked);\n  }\n\n  remove(index) {\n    console.log(\"deleting \" + this.tasks[index].name + \" task!\");\n    this.checkedIds = [];\n    this.selectedAll = false;\n    this.tasks.splice(index, 1);\n  }\n\n  archiveDone() {\n    this.checkedIds = [];\n    this.selectedAll = false;\n    this.tasks = this.tasks.filter(t => t.type !== \"Done\") ;\n  }\n\n  checkAll(){\n    this.selectedAll = !this.selectedAll;\n    this.checkedIds = [];\n    if(this.selectedAll){ // Check all\n      this.tasks.forEach((t,i) => this.checkedIds.push(i));\n    }\n  }\n  updateCheckAll(){\n    if(this.checkedIds.length === this.tasks.length){\n      this.selectedAll = true;\n    }else{\n      this.selectedAll = false;\n    }\n  }\n}\n\n</script>\n\n<style scoped lang=\"css\">\n  h1 {\n    color: chocolate;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}