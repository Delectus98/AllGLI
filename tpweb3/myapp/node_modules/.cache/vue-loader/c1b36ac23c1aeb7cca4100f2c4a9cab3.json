{"remainingRequest":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/src/components/todos.vue?vue&type=style&index=0&id=1ece2e8d&scoped=true&lang=css&","dependencies":[{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/src/components/todos.vue","mtime":1602146944064},{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mbeucher/web-workspace/GLI/tpweb3/myapp2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDEgewogIGNvbG9yOiBjaG9jb2xhdGU7Cn0K"},{"version":3,"sources":["todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA","file":"todos.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n  <div class=\"todos\">\n    <h1>{{ name }}</h1>\n    <input type=\"radio\" id=\"select-done\" value=\"Done\" v-model=\"picked\">\n    <label for=\"select-done\">Done</label>\n    <input type=\"radio\" id=\"select-in-progress\" value=\"InProgress\" v-model=\"picked\">\n    <label for=\"select-in-progress\">In progress</label>\n    <input type=\"radio\" id=\"select-todo\"  value=\"Todo\" v-model=\"picked\">\n    <label for=\"select-todo\">Todo</label>\n\n    <button v-on:click=\"update()\">\n      Apply state to selected tasks\n    </button>\n    <button v-on:click=\"archiveDone()\">Archive all done tasks</button>\n    <input type=\"checkbox\" id=\"filter-tasks\" v-model=\"stated\">\n    <label for=\"filter-tasks\">Filter by state</label>\n\n    <input type=\"text\" v-model=\"filter\" placeholder=\"Recherchez en détail!\"><br/>\n    <input type=\"text\" v-model=\"message\" placeholder=\"Rentrez champ tâche ici!\" v-on:change=\"addTask()\">\n\n    <input type='checkbox' id=\"select-all\" @click='checkAll()' v-model=\"selectedAll\">\n    <label for=\"select-all\">Select all</label>\n    <ul>\n      <li v-for=\"(item, index) in tasks.filter(t0 => t0.name.startsWith(filter) && (!stated || t0.type.startsWith(picked)))\" :key=\"index\" >\n        <input type=\"checkbox\" v-model=\"checkedIds\" :value=\"tasks.indexOf(item)\" @change='updateCheckAll()'>\n        {{ item.name }} [{{item.type}}]\n        {{ tasks.indexOf(item) }}\n        <button v-on:click=\"remove(index)\">\n          X\n        </button>\n        <input type=\"text\" v-if=\"checkedIds.length === 1 && checkedIds.includes(index)\" v-model=\"newName\" placeholder=\"rename\" @change=\"rename(index)\">\n      </li>\n    </ul>\n    <footer v-if=\"tasks.length!==0\">\n      Task count: {{ tasks.length }}\n    </footer>\n  </div>\n</template>\n\n<script lang=\"js\">\nimport { Component, Vue } from 'vue-property-decorator';\n\n// states\nconst TODO = \"Todo\";\n/*const IN_PROGRESS = \"InProgress\";\nconst DONE = \"Done\";*/\n\nclass Task\n{\n  name=\"\";\n  type=TODO;\n\n  constructor(message, _type) {\n    this.name = message;\n    this.type = _type;\n  }\n}\n\n@Component\nexport default class Todos extends Vue {\n\n  name = 'todos';\n  props = [];\n\n  message = '';\n  filter = '';\n\n  stated = true;\n  tasks = [];\n  // TODO\n  picked = TODO;\n\n  newName=\"\";\n\n  selectedAll = false;\n  checkedIds = [];\n\n  addTask() {\n    console.log(\"added:\" + this.message);\n    this.tasks.push(new Task(this.message, this.picked))\n    this.message = '';\n    if (this.selectedAll)\n    {\n      this.selectedAll = false;\n      this.checkAll();\n    }\n  }\n\n  rename(index)\n  {\n    this.tasks[index].name = this.newName;\n  }\n\n  update() {\n    this.checkedIds.forEach((v,i) => this.tasks[v].type = this.picked);\n  }\n\n  remove(index) {\n    console.log(\"deleting \" + this.tasks[index].name + \" task!\");\n    this.checkedIds = [];\n    this.selectedAll = false;\n    this.tasks.splice(index, 1);\n  }\n\n  archiveDone() {\n    this.checkedIds = [];\n    this.selectedAll = false;\n    this.tasks = this.tasks.filter(t => t.type !== \"Done\") ;\n  }\n\n  checkAll(){\n    this.selectedAll = !this.selectedAll;\n    this.checkedIds = [];\n    if(this.selectedAll){ // Check all\n      this.tasks.forEach((t,i) => this.checkedIds.push(i));\n    }\n  }\n  updateCheckAll(){\n    if(this.checkedIds.length === this.tasks.length){\n      this.selectedAll = true;\n    }else{\n      this.selectedAll = false;\n    }\n  }\n}\n\n</script>\n\n<style scoped lang=\"css\">\n  h1 {\n    color: chocolate;\n  }\n</style>\n"]}]}